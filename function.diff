--- a/function
+++ b/function
@@ -555,7 +555,7 @@
             warn "$MSG_DNF_AUTO_DIR_FAILED"
             return 1
         fi
-        tee /etc/systemd/system/dnf-automatic.timer.d/override.conf > /dev/null << 'EOF'
+sudo tee /etc/systemd/system/dnf-automatic.timer.d/override.conf > /dev/null << 'EOF'
 [Unit]
 Description=dnf-automatic timer
 ConditionPathExists=!/run/ostree-booted
@@ -678,7 +678,7 @@
     mkdir -p /etc/glpi/config
     mkdir -p /var/lib/glpi/files
     mv -f "${REP_GLPI}"files /var/lib/glpi
-    tee /etc/glpi/config/local_define.php > /dev/null <<'EOF'
+sudo tee /etc/glpi/config/local_define.php > /dev/null <<'EOF'
 <?php
     define('GLPI_VAR_DIR', '/var/lib/glpi/files');
     define('GLPI_LOG_DIR', '/var/log/glpi');
@@ -710,12 +710,12 @@
     CustomLog /var/log/glpi/access.log combined
 </VirtualHost>
 EOF
-        phpversion=$(php -v | grep -i '(cli)' | awk '{print $2}' | cut -c 1,2,3)
+        phpversion=$(php -v | grep -i '(cli)' | awk '{print $2}' | cut -d. -f1,2)
         sed -i 's/^\(;\?\)\(session.cookie_httponly\).*/\2 =on/' /etc/php/"$phpversion"/apache2/php.ini
         sleep 1
         # Disable Apache Web Server Signature
-        echo "ServerSignature Off" >> /etc/apache2/apache2.conf
-        echo "ServerTokens Prod" >> /etc/apache2/apache2.conf
+grep -q "^ServerSignature Off$" /etc/apache2/apache2.conf || echo "ServerSignature Off" | sudo tee -a /etc/apache2/apache2.conf > /dev/null
+grep -q "^ServerTokens Prod$" /etc/apache2/apache2.conf || echo "ServerTokens Prod" | sudo tee -a /etc/apache2/apache2.conf > /dev/null
         # Activation du module rewrite d'apache
         {
             # Enable Apache modules and site configuration
@@ -750,7 +750,7 @@
  --no-interaction"
         echo "$(date '+%Y-%m-%d %H:%M:%S') - [INFO] Exécution : sudo -u www-data php ${CMD}" 1>>"${LOGFILE}" || true
         # Exécuter la commande en tant que www-data. Utiliser sudo tee pour écrire vers les fichiers protégés.
-        if eval "sudo -u www-data php ${CMD}" 2>>"${ERRORFILE}" 1>>"${LOGFILE}"; then
+        if sudo -u www-data bash -lc "php ${CMD}" 2>>"${ERRORFILE}" 1>>"${LOGFILE}"; then
             info "Installation GLPI terminée avec succès." >>"${LOGFILE}"
         else
             warn "Échec de l'installation GLPI via console." >>"${ERRORFILE}"
@@ -758,14 +758,14 @@
         fi
         systemctl restart apache2
         # Configuration de la tâche Cron
-        echo "*/2 * * * * www-data /usr/bin/php ""${REP_GLPI}""front/cron.php &>/dev/null" >> /etc/cron.d/glpi
+        echo "*/2 * * * * www-data /usr/bin/php ${REP_GLPI}/front/cron.php &>/dev/null" >> /etc/cron.d/glpi
     elif [[ "${ID}" =~ ^(almalinux|centos|rocky|rhel)$ ]]; then
         network_info
         sudo tee /etc/nginx/conf.d/glpi.conf > /dev/null << EOF
 server {
     listen 80;
     server_name "${IPADRESS}";
-    root ${REP_GLPI}public;
+    root ${REP_GLPI}/public;
     location / {
         try_files \$uri /index.php\$is_args\$args;
     }
@@ -805,8 +805,8 @@
         sleep 2
         # Installation de GLPI en ligne de commande
         CMD="php ${REP_GLPI}bin/console db:install --db-host=\"localhost\" --db-port=3306 --db-name=${DB_NAME} --db-user=${DB_USER} --db-password=\"${SQLGLPIPWD}\" --default-language=\"${LANGUAGE}\" --force --no-telemetry --no-interaction"
-        eval sudo -u nginx "${CMD}"
-        echo "*/2 * * * * nginx /usr/bin/php ""${REP_GLPI}""front/cron.php &>/dev/null" >> /etc/cron.d/glpi
+        sudo -u nginx bash -lc "php ${CMD}"
+        echo "*/2 * * * * nginx /usr/bin/php ${REP_GLPI}/front/cron.php &>/dev/null" >> /etc/cron.d/glpi
     fi
     sleep 5
     rm -Rf "${REP_GLPI}"install/install.php
