#!/usr/bin/env bash
#
# GLPI install script
# Author: PapyPoc
# Version 1.8.0
# Variable file
#
set -euo pipefail
# Ne pas continuer si le script est exécuté directement
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    echo -e "Ce fichier doit être sourcé, pas exécuté.\n" >&2
    echo -e "This file must be sourced, not executed.\n" >&2
    exit 1
fi
# Determine the home directory of the user who invoked the installer (supports sudo).
if [ -n "${SUDO_USER:-}" ] && [ "${SUDO_USER}" != "root" ]; then
    INVOKING_USER="$SUDO_USER"
else
    INVOKING_USER="${LOGNAME:-${USER:-$(logname 2>/dev/null || echo root)}}"
fi
INVOKING_HOME=""
if command -v getent >/dev/null 2>&1; then
    INVOKING_HOME=$(getent passwd "$INVOKING_USER" | cut -d: -f6 || true)
else
    INVOKING_HOME="${INVOKING_HOME:-${HOME:-/root}}"
fi
if [ -z "$INVOKING_HOME" ]; then
    INVOKING_HOME=$(eval echo "~$INVOKING_USER" 2>/dev/null || true)
else
    INVOKING_HOME="${INVOKING_HOME:-${HOME:-/root}}"
    export INVOKING_HOME
fi
ROUGE='\033[0;31m' # Red
ORANGE='\033[0;33m' # Orange
CYAN='\033[0;36m' # Cyan
NC='\033[0m' # No Color
DEBIAN_VERSIONS=("11" "12")
UBUNTU_VERSIONS=("23.10" "24.10")
ALMA_VERSIONS=("9.5")
CENTOS_VERSIONS=("9")
ROCKY_VERSIONS=("9.5")
REDHAT_VERSIONS=("9.5")
SQLROOTPWD=$(openssl rand -base64 48 | cut -c1-18)
SQLGLPIPWD=$(openssl rand -base64 48 | cut -c1-18)
ADMINGLPIPWD=$(openssl rand -base64 48 | cut -c1-12)
POSTGLPIPWD=$(openssl rand -base64 48 | cut -c1-12)
TECHGLPIPWD=$(openssl rand -base64 48 | cut -c1-12)
NORMGLPIPWD=$(openssl rand -base64 48 | cut -c1-12)
REP_BACKUP_COMPRESS="${INVOKING_HOME}/Archive_GLPI"
FICHIER_MSG="${INVOKING_HOME}/sauve_mdp.txt"
ERRORFILE="${INVOKING_HOME}/error.log"
WARNINGFILE="${INVOKING_HOME}/warning.log"
LOGFILE="${INVOKING_HOME}/install.log"
DEBUG_ENTRY="$(date '+%F %T') [$$][DEBUG: ${FUNCNAME[0]:-main}] Entrée dans ${FUNCNAME[1]:-main}"
DEBUG_END="$(date '+%F %T') [$$][DEBUG: ${FUNCNAME[0]:-main}] Fin de ${FUNCNAME[1]:-main}"
export ROUGE ORANGE CYAN NC
export DOWNLOADLINK NEW_VERSION REP_BACKUP_COMPRESS
export DEBIAN_VERSIONS UBUNTU_VERSIONS ALMA_VERSIONS CENTOS_VERSIONS ROCKY_VERSIONS REDHAT_VERSIONS
export REP_BACKUP REP_GLPI
export SQLROOTPWD SQLGLPIPWD ADMINGLPIPWD POSTGLPIPWD TECHGLPIPWD NORMGLPIPWD
export DB_NAME DB_USER BDD_BACKUP
export FICHIER_MSG ERRORFILE LOGFILE WARNINGFILE
export INVOKING_USER INVOKING_HOME DEBUG_ENTRY DEBUG_END
# Initialisation des fichiers de log
: > "$LOGFILE"
: > "$ERRORFILE"
: > "$WARNINGFILE"
# Messages
#MSG_CHECK_OS="Vérification du système d'exploitation"
#MSG_CHECK_DEP="Vérification des dépendances"
#MSG_INSTALL_DEP="Installation des dépendances"
#MSG_CHECK_DB="Vérification de la base de données"
#MSG_CREATE_DB="Création de la base de données"
#MSG_CREATE_USER_DB="Création de l'utilisateur de la base de données"
#MSG_SET_PRIV_DB="Attribution des privilèges à l'utilisateur de la base de données"
#MSG_DOWNLOAD_GLPI="Téléchargement de GLPI"
#MSG_EXTRACT_GLPI="Extraction de GLPI"
#MSG_CONFIG_GLPI="Configuration de GLPI"
#MSG_SET_PERM="Définition des permissions"
#MSG_CREATE_ADMIN="Création de l'utilisateur admin de GLPI"
#MSG_CLEANUP="Nettoyage"
#MSG_RESTORE_BACKUP="Restauration de la sauvegarde"
#MSG_BACKUP="Sauvegarde de GLPI"
#MSG_BACKUP_DB="Sauvegarde de la base de données"
#MSG_FINALIZE="Finalisation de l'installation"
#MSG_COMMAND="Exécution de la commande"          