#!/usr/bin/env bash
#
# GLPI install script
# Author: PapyPoc
# Version: 1.7.0
# Variable file
#
set -euo pipefail

# === Ce fichier est destiné à être sourcé et non exécuté directement ===
# Ne pas continuer si le script est exécuté directement
[[ "${BASH_SOURCE[0]}" == "${0}" ]] && {
    echo -e "Ce fichier doit être sourcé, pas exécuté.\n"
    echo -e "This file must be sourced, not executed.\n" >&2
    return 1
}
# === Constantes globales exportables ===
# Vérifier la disponibilité des commandes nécessaires
if ! command -v curl &> /dev/null; then
    echo "Erreur: curl n'est pas installé" >&2
    return 1
fi
if ! command -v jq &> /dev/null; then
    echo "Erreur: jq n'est pas installé" >&2
    return 1
fi
if ! command -v openssl &> /dev/null; then
    echo "Erreur: openssl n'est pas installé" >&2
    return 1
fi

export DOWNLOADLINK; DOWNLOADLINK=$(curl -s https://api.github.com/repos/glpi-project/glpi/releases/latest | jq -r '.assets[0].browser_download_url')
if [ -z "$DOWNLOADLINK" ] || [ "$DOWNLOADLINK" = "null" ]; then
    echo "Erreur: Impossible de récupérer le lien de téléchargement GLPI" >&2
    return 1
fi

export NEW_VERSION; NEW_VERSION=$(curl -s https://api.github.com/repos/glpi-project/glpi/releases/latest | jq -r '.name')
if [ -z "$NEW_VERSION" ] || [ "$NEW_VERSION" = "null" ]; then
    echo "Erreur: Impossible de récupérer la version GLPI" >&2
    return 1
fi
export DEBIAN_VERSIONS=("11" "12")
export UBUNTU_VERSIONS=("23.10" "24.10")
export ALMA_VERSIONS=("9.5")
export CENTOS_VERSIONS=("9")
export ROCKY_VERSIONS=("9.5")
export REDHAT_VERSIONS=("9.5")
export REP_BACKUP="/root/glpi_sauve/"
export REP_GLPI="/var/www/html/glpi/"
export SQLROOTPWD; SQLROOTPWD=$(openssl rand -base64 48 | cut -c1-18)
export SQLGLPIPWD; SQLGLPIPWD=$(openssl rand -base64 48 | cut -c1-18)
export ADMINGLPIPWD; ADMINGLPIPWD=$(openssl rand -base64 48 | cut -c1-12)
export POSTGLPIPWD; POSTGLPIPWD=$(openssl rand -base64 48 | cut -c1-12)
export TECHGLPIPWD; TECHGLPIPWD=$(openssl rand -base64 48 | cut -c1-12)
export NORMGLPIPWD; NORMGLPIPWD=$(openssl rand -base64 48 | cut -c1-12)
export DB_NAME="glpi"
export DB_USER="glpi_user"
export CURRENT_DATE_TIME; CURRENT_DATE_TIME=$(date +"%d-%m-%Y_%H-%M-%S")
export BDD_BACKUP="bdd_glpi-${CURRENT_DATE_TIME}.sql"
export FICHIER_MSG="${REP_SCRIPT}/sauve_mdp.txt"
export SUCCES_FILE="${REP_SCRIPT}/succes.log"
export ERROR_FILE="${REP_SCRIPT}/error.log"
export LOG_FILE="${REP_SCRIPT}/glpi_install.log"