#!/bin/bash

for cmd in curl jq dialog; do
    if ! command -v $cmd >/dev/null 2>&1; then
        echo "Erreur : '$cmd' est requis. Installe-le avec : sudo apt install $cmd"
        exit 1
    fi
done

API_URL="https://api.github.com/repos/glpi-project/glpi/tags"

# Récupérer et nettoyer les tags (garde uniquement les versions semver)
TAGS_RAW=$(curl -s "$API_URL" | jq -r '.[] | .name')
TAGS=$(printf '%s\n' "$TAGS_RAW" | sed 's/\r//g' | sed '/^[[:space:]]*$/d' | sed '/^[[:space:]]*[#;]/d' | sed 's/^"\(.*\)"$/\1/' | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -Vr | head -n 8)

if [ -z "$TAGS" ]; then
    dialog --title "Erreur" --msgbox "Impossible de récupérer les versions GLPI depuis GitHub." 7 60
    exit 1
fi

declare -A LINKS
while IFS= read -r tag; do
    LINKS["$tag"]="https://github.com/glpi-project/glpi/archive/refs/tags/${tag}.tar.gz"
done <<EOF
$TAGS
EOF

# Construire la radiolist de manière robuste (utilise un tableau d'arguments)
TMPLIST=$(mktemp)
FIRST=ON
while IFS= read -r tag; do
    # retirer guillemets et espaces
    tag_clean=$(printf '%s' "$tag" | sed 's/^\s*//;s/\s*$//;s/^"\(.*\)"$/\1/')
    printf '%s|%s|%s\n' "$tag_clean" "Version GLPI $tag_clean" "$FIRST" >> "$TMPLIST"
    FIRST=OFF
done <<EOF
$TAGS
EOF

# Préparer les arguments pour dialog --radiolist
radiolist_args=()
while IFS='|' read -r tag_clean desc status; do
    radiolist_args+=("$tag_clean" "$desc" "$status")
done < "$TMPLIST"

exec 3>&1
VERSION=$(dialog --backtitle "Installation GLPI" \
    --title "Choix de la version GLPI" \
    --ok-label "Suivant" \
    --cancel-label "Annuler" \
    --radiolist "Choisissez la version GLPI à installer :" \
    15 60 6 \
    "${radiolist_args[@]}" \
    3>&1 1>&2 2>&3)
EXIT_CODE=$?
exec 3>&-
rm -f "$TMPLIST"
if [ $EXIT_CODE -ne 0 ]; then
    clear
    echo "Installation annulée."
    exit 1
fi

# Formulaire des paramètres — affiché immédiatement après la radiolist
exec 3>&1
FORM_OUTPUT=$(dialog --clear \
    --ok-label "Valider" \
    --cancel-label "Annuler" \
    --backtitle "Installation GLPI" \
    --title "Paramètres d'installation" \
    --form "Version sélectionnée : GLPI $VERSION\n\nSaisissez les informations :" \
    20 80 10 \
    "Répertoire d'installation :" 1 2 "/var/www/html/glpi" 1 35 40 0 \
    "Nom de la base MySQL :"      3 2 "glpi_db"          3 35 30 0 \
    "Utilisateur MySQL :"         5 2 "glpi_user"        5 35 30 0 \
    3>&1 1>&2 2>&3)
EXIT_CODE=$?
exec 3>&-
if [ $EXIT_CODE -ne 0 ]; then
    clear
    echo "Installation annulée."
    exit 1
fi

INSTALL_DIR=$(echo "$FORM_OUTPUT" | sed -n 1p)
DB_NAME=$(echo "$FORM_OUTPUT" | sed -n 2p)
DB_USER=$(echo "$FORM_OUTPUT" | sed -n 3p)
DOWNLOAD_URL="${LINKS[$VERSION]}"

dialog --title "Résumé de la configuration" --msgbox "Veuillez vérifier vos choix :\n
Version GLPI : $VERSION
Lien de téléchargement : $DOWNLOAD_URL
Répertoire d'installation : $INSTALL_DIR
Base de données : $DB_NAME
Utilisateur MySQL : $DB_USER" 17 80

dialog --title "Confirmation" --yesno "Souhaitez-vous procéder à l'installation de GLPI $VERSION ?" 7 70
CONFIRM=$?

clear
if [ $CONFIRM -eq 0 ]; then
    echo "Version GLPI         : $VERSION"
    echo "Téléchargement       : $DOWNLOAD_URL"
    echo "Répertoire           : $INSTALL_DIR"
    echo "Nom de la base       : $DB_NAME"
    echo "Utilisateur MySQL    : $DB_USER"
    echo ""
    #wget -q -O "/tmp/glpi-${VERSION}.tar.gz" "$DOWNLOAD_URL" && \
    #echo "Archive téléchargée : /tmp/glpi-${VERSION}.tar.gz" || \
    #echo "Erreur de téléchargement."
else
    echo "Installation annulée par l'utilisateur."
fi
