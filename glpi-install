#!/usr/bin/env bash
#
# GLPI install script
# Author: PapyPoc
# Version: 1.8.0
# Main file
# Langage pris en compte français et anglais
#
set -Eeuo pipefail
# Nettoyer le terminal
clear
source "${REP_SCRIPT}/config.conf" # Fichier de variable
source "${REP_SCRIPT}/function.fon"    # Fichier de fonction
load_language # Fichier de langue
ORIG_USER="${SUDO_USER:-$(logname 2>/dev/null || echo "${USER:-unknown}")}" # Détecte l'utilisateur réel
if [ "$EUID" -eq 0 ]; then # Vérifie si root
    info "$MSG_ROOT"
else
    if id -nG "${ORIG_USER}" 2>/dev/null | grep -Eqw "sudo|wheel"; then # Vérifie si l'utilisateur est déjà dans sudo ou wheel
        exec sudo -- "$0" "$@"
    else
        warn "${MSG_USER_NOT_SUDO}"
        exit 1
    fi
fi
# Définir le répertoire du script
REP_SCRIPT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
if declare -F ensure_dependencies >/dev/null 2>&1; then
    ensure_dependencies || { echo "Failed to ensure dependencies" >> "${ERRORS_LOG}"; return 1; }
    if [ "${NEED_RESTART:-0}" -eq 1 ]; then
        # Restart top-level script that sourced this file
        idx=$(( ${#BASH_SOURCE[@]} - 1 ))
        top_script="${BASH_SOURCE[$idx]}"
        if [ -n "$top_script" ] && [ "$top_script" != "$(basename "$SHELL")" ]; then
            echo "Dependencies installed. Restarting $top_script..." "${ERRORS_LOG}"
            if [ -x "$top_script" ]; then
                exec "$top_script"
            else
                exec "$SHELL" -lc "bash '$(printf '%q' "$top_script")'"
            fi
        else
            echo "Dependencies installed. Please re-run your installer." "${ERRORS_LOG}"
            return 0
        fi
    fi
else
    echo "Warning: ensure_dependencies not available; skipping automatic install check." "${ERRORS_LOG}"
fi
if [ -f /etc/os-release ]; then # Détection de la distribution
    # shellcheck disable=SC1091
    source /etc/os-release
    DISTRO_ID=${ID}
    info "$MSG_DISTRO_DETECTED$DISTRO_ID ${VERSION_ID}"
else
    warn "$MSG_DISTRO_NONOK"
    exit 1
fi
case "${DISTRO_ID}" in # Choix du groupe admin
    debian|ubuntu)
        ADMIN_GROUP="sudo";;
    centos|rhel|rocky|almalinux|fedora)
        ADMIN_GROUP="wheel";;
    *)
        ADMIN_GROUP="sudo"
        info "$MSG_DISTRO_UNKNOWN";
esac
# Vérification de l'appartenance
if ! id -nG "${ORIG_USER}" | grep -qw "${ADMIN_GROUP}"; then
    info "$MSG_ADD_USER_GROUP"
    usermod -aG "${ADMIN_GROUP}" "${ORIG_USER}"
    if [ $? -eq 0 ]; then
        info "$MSG_USER_ADDED_SUCCESS"
        info "$MSG_RECONNECT"
    else
        warn "$MSG_ADD_USER_FAILED"
        exit 1
    fi
fi
check_distro # Regarde si la distribution est conforme
prompt_install_options # Demande les options d'installation
# shellcheck disable=SC2154
echo "${tags}" >> "${ERRORS_LOG}"
check_install "${REP_GLPI}" # Regarde si GLPI est installé ou pas
display_result # Affiche le résultat de l'installation
chmod 600 "${FICHIER_MSG}"
chown root:root "${FICHIER_MSG}"
echo ""
warn "${MSG_FILE_MSG}"
echo ""