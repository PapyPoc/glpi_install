#!/usr/bin/env bash
#
# GLPI install script
# Author: PapyPoc
# Version: 1.8.0
# Main file
# Langage pris en compte français et anglais
#
set -Eeuo pipefail
clear # Nettoyer le terminal
REP_SCRIPT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)" # Définir le répertoire du script
# shellcheck disable=SC1091
. "${REP_SCRIPT}/function" # Fichier de fonctions
trap 'on_error' ERR
# shellcheck disable=SC1091
. "${REP_SCRIPT}/config" # Fichier de variable
load_language # Fichier de langue
# Regarde si la distribution est conforme
info "${MSG_START_SCRIPT}" >> "${LOGFILE}"
info "${MSG_CHECK_DISTRIBUTION}" >> "${LOGFILE}"
if ! check_distro; then
   dialog --title "${MSG_DIALOG_ERROR_TITLE}" --msgbox "${MSG_DISTRO_CHECK_FAILED}" 6 50
    error "${MSG_DISTRO_CHECK_ERROR}" 2>> "${ERRORFILE}"
    exit 1
fi
info "${MSG_PROMPT_INSTALL_OPTIONS}" >> "${LOGFILE}"
if ! prompt_install_options; then # Demande les options d'installation
    dialog --title "${MSG_DIALOG_ERROR_TITLE}" --msgbox "${MSG_PROMPT_OPTIONS_FAILED}" 6 70
    error "${MSG_PROMPT_OPTIONS_ERROR}" 2>> "${ERRORFILE}"
    exit 1
fi
info "${MSG_CHECK_INSTALL}" >> "${LOGFILE}"
if ! check_install "${REP_GLPI}"; then # Vérifie l'installation de GLPI
    dialog --title "${MSG_DIALOG_ERROR_TITLE}" --msgbox "${MSG_CHECK_INSTALL_FAILED}" 6 60
    error "${MSG_CHECK_INSTALL_ERROR}" 2>> "${ERRORFILE}"
    exit 1
fi
info "${MSG_DISPLAY_RESULT}" >> "${LOGFILE}"
if ! display_result; then # Affiche le résultat de l'installation
    dialog --title "${MSG_DIALOG_ERROR_TITLE}" --msgbox "${MSG_DISPLAY_RESULT_FAILED}" 6 50
    error "${MSG_DISPLAY_RESULT_ERROR}" 2>> "${ERRORFILE}"
    exit 1
fi
if [ -f "${FICHIER_MSG}" ]; then # Vérifie si le fichier de sauvegarde existe
    chmod 600 "${FICHIER_MSG}"
    chown root:root "${FICHIER_MSG}"
    dialog --title "${MSG_DIALOG_INFO_TITLE}" --msgbox "${MSG_BACKUP_CREATED}" 6 60
    echo "${MSG_BACKUP_CREATED}" 1>> "${LOGFILE}"
else
    dialog --title "${MSG_DIALOG_ERROR_TITLE}" --msgbox "${MSG_BACKUP_NOT_FOUND}" 6 60
    error "$MSG_ERROR_FICHIER_MSG" 1>> "${ERRORFILE}"
    exit 1
fi
if [ -s "${ERRORFILE}" ]; then
    dialog --title "${MSG_DIALOG_WARNING_TITLE}" --msgbox "${MSG_WARN_CHECK_LOG}" 8 70
else
    rm -f "${ERRORFILE}"
fi
if [ -s "${LOGFILE}" ]; then
    dialog --title "${MSG_DIALOG_WARNING_TITLE}" --msgbox "${MSG_WARN_CHECK_LOG}" 8 70
else
    rm -f "${LOGFILE}"
fi
if [ -s "${DEBUGFILE}" ]; then
    dialog --title "${MSG_DIALOG_WARNING_TITLE}" --msgbox "${MSG_WARN_CHECK_LOG}" 8 70
else
    rm -f "${DEBUGFILE}"
fi
info "${MSG_END_SCRIPT}" >> "${LOGFILE}"
exit 0