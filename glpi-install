#!/usr/bin/env bash
#
# GLPI install script
# Author: PapyPoc
# Version: 2.0.0
# Main file
# Langage pris en compte français et anglais
#
# set -Eeuo pipefail
clear # Nettoyer le terminal
REP_SCRIPT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)" # Définir le répertoire du script
source "${REP_SCRIPT}/function" # Fichier de fonctions
trap 'on_error' ERR
source "${REP_SCRIPT}/config" # Fichier de variable
# Charger le fichier de langue
    # Traduction avec gettext
    TEXTDOMAIN=messages
    TEXTDOMAINDIR="$REP_SCRIPT/lang"
    export TEXTDOMAIN TEXTDOMAINDIR
    # Détection automatique de la langue du système
    LANGUAGE=${LANG%%_*}
    [ -z "$LANGUAGE" ] && LANGUAGE="en_US"
    LANGUAGE="en_US"
    export LANG=$LANGUAGE.UTF-8
    # Création des dossiers LC_MESSAGES si inexistants
    if [ ! -f "$TEXTDOMAINDIR/$LANG/LC_MESSAGES/$TEXTDOMAIN.mo" ]; then
        sudo mkdir -p "$TEXTDOMAINDIR/$LANG/LC_MESSAGES"
        if [ -f "$TEXTDOMAINDIR/${LANG}.mo" ]; then
            ln -sf "../../${LANG}.mo" "$TEXTDOMAINDIR/$LANG/LC_MESSAGES/$TEXTDOMAIN.mo"
        fi
    fi
    info "$(gt "Fichier de langue chargé :") ${TEXTDOMAINDIR/$REP_SCRIPT\//}"
    info "$(gt "Chargement du fichier de langue")"
    info "$(gt "Début du script d'installation")"
# Regarde si la distribution est conforme
    info "$(gt "Vérification de la distribution")"
    if ! check_distro; then # Vérification de la distribution
        dialog --title "❗ $(gt "Erreur")" --msgbox "$(gt "La vérification de la distribution a échoué.")" 6 50 >/dev/tty 2>&1
        error "$(gt "La vérification de la distribution a échoué.")"
        exit 1
    fi
# Demande les options d'installation ou de mise à jour
    info "$(gt "Menu général")"
    if ! selection_menu; then # Demande les options
        if [[ $? == 100 ]]; then
            info "$(gt "Sortie du menu général.")"
            exit 0
        fi
        if [[ ${SELECTED_MENU} == 0 ]] || [[ ${SELECTED_MENU} == 7 ]]; then
            info "$(gt "Arrêt du menu général par l'utilisateur.")"
            exit 1
        fi
    fi
    info "Fichier de sauvegarde des mots de passe : ${FICHIER_MSG}${DB_NAME}.txt"
# Droit sur le fichier de sauvegarde des mots de passe
    if file_save=$(find "${INVOKING_HOME}/saved_credentials" -type f -name "${FICHIER_MSG}${DB_NAME}*" | head -n 1); then # Vérifie si le fichier de sauvegarde existe
        info "$(gt "Création du fichier de sauvegarde des mots de passe")"
        chmod -Rf 500 "${INVOKING_HOME}/saved_credentials"
        chown root:root "${file_save}"
        info "$(gt "Le fichier de sauvegarde") ${file_save} $(gt "a été créé avec succès.")"
        export file_save
    else
        dialog --title "❗ $(gt "Erreur")" --msgbox "$(gt "Fichier de sauvegarde introuvable :") ${file_save}" 6 60 >/dev/tty 2>&1
        error "$(gt "Fichier de sauvegarde introuvable :") ${file_save}"
        exit 1
    fi
# Afficher le fichier de sauvegarde des mots de passe
    if [ -f "${file_save}" ] || [ -s "${file_save}" ]; then
        info "⚠️ $(gt "Affichage des fichiers de logs")"
        display_result
    fi
# Vérifie et affiche les fichiers de logs non vides
    LOGFILES=()
    for f in "${ERRORFILE}" "${DEBUGFILE}" "${UPDATEFILE}"; do
        [[ -s $f ]] && LOGFILES+=("$f") || [[ -f $f ]] && rm -f "$f"
    done
    info "ℹ️ $(gt 'Affichage des fichiers de logs.')"
    if ((${#LOGFILES[@]})); then
        msg="$(gt 'Veuillez vérifier les fichiers de logs suivants :') ${LOGFILES[*]}"
        info "⚠️ $msg"
        dialog --title "⚠️ Attention" --msgbox "$msg" 8 70 >/dev/tty 2>&1
    fi
# Affichage du fichier d'information s'il existe
    if [ -s ${INFOFILES} ]; then
        info "ℹ️ $(gt "Informations sur les fichiers de logs :") ${INFOFILES}"
        dialog --title "ℹ️ $(gt "Information")" --msgbox "$(gt "Informations sur les fichiers de logs :") ${INFOFILES}" 8 70 >/dev/tty 2>&1
    fi
clear
info "$(gt "Fin du script d'installation")"