#!/usr/bin/env bash
#
# GLPI install script
# Author: PapyPoc
# Version: 1.8.0
# Main file
# Langage pris en compte français et anglais
#
set -Eeuo pipefail
clear # Nettoyer le terminal
REP_SCRIPT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)" # Définir le répertoire du script
# shellcheck disable=SC1091
. "${REP_SCRIPT}/function" # Fichier de fonctions
trap 'on_error' ERR
# shellcheck disable=SC1091
. "${REP_SCRIPT}/config" # Fichier de variable
load_language # Fichier de langue
# Regarde si la distribution est conforme
info "${MSG_START_SCRIPT:-Starting installation script}"
# Vérifie la distribution
info "${MSG_CHECK_DISTRIBUTION:-Checking distribution}"
if ! check_distro; then # Vérification de la distribution
    dialog --title "${MSG_DIALOG_TITLE_ERROR:-Error}" --msgbox "${MSG_CHECK_DISTRO_FAILED:-Failed to check distribution}" 6 50
    error "${MSG_CHECK_DISTRO_FAILED:-Failed to check distribution}"
    exit 1
fi
# Demande les options d'installation ou de mise à jour
info "${MSG_PROMPT_INSTALL_OPTIONS:-Prompting installation options}"
if ! prompt_install_options; then # Demande les options d'installation
    info "${MSG_PROMPT_INSTALL_OPTIONS_ABORT:-Prompt installation options aborted by user}"
    exit 1
fi
# Droit sur le fichier de sauvegarde des mots de passe
if [ -f "${FICHIER_MSG}" ]; then # Vérifie si le fichier de sauvegarde existe
    info "${MSG_BACKUP_CREATED:-Backup file created}"
    chmod 600 "${FICHIER_MSG}"
    chown root:root "${FICHIER_MSG}"
    dialog --title "${MSG_DIALOG_TITLE_INFO:-Information}" --msgbox "${MSG_BACKUP_CREATED_1:-Backup file created: }${FICHIER_MSG}${MSG_BACKUP_CREATED_2:- has been created successfully.}" 6 60
else
    dialog --title "${MSG_DIALOG_ERROR_TITLE:-Error}" --msgbox "${MSG_BACKUP_NOT_FOUND:-Backup file not found}" 6 60
    error "$MSG_ERROR_FICHIER_MSG:-Backup file not found"
    exit 1
fi
# Afficher le fichier de sauvegarde des mots de passe
if [ -f "${FICHIER_MSG}" ] || [ -s "${FICHIER_MSG}" ]; then
    info "${MSG_DISPLAY_RESULT:-Displaying result}"
    display_result
fi
# Affichage des fichiers de logs s'ils existent
LOGFILES="${ERRORFILE} ${DEBUGFILE} ${UPDATEFILE}"
if [ -s "${LOGFILES}" ]; then
    info "Affichage des fichiers de logs à l'utilisateur."
    LOGFILEP=""
    for LOGFILE in ${LOGFILES}; do
        if [ -s "${LOGFILE}" ]; then
            LOGFILEP+="${LOGFILE} "
        else
            rm -rf "${LOGFILE}"
        fi
    done
    dialog --title "${MSG_DIALOG_WARNING_TITLE}" --msgbox "${MSG_WARN_CHECK_LOG} ${LOGFILEP}" 8 70
fi
# Affichage du fichier d'information s'il existe
if [ -s "${INFOFILE}" ]; then
    info "Affichage du fichier d'information à l'utilisateur."
    dialog --title "${MSG_DIALOG_WARNING_TITLE}" --msgbox "${MSG_WARN_CHECK_LOG} ${INFOFILE}" 8 70
fi
info "${MSG_END_SCRIPT}"