#!/usr/bin/env bash
#
# GLPI install script
# Author: PapyPoc
# Version: 1.8.0
# Script d'installation GLPI
# Langage pris en compte français et anglais
#
set -Eeuo pipefail
clear # Nettoyer le terminal
# Définition des variables Globales
ROUGE='\033[0;31m' # Red
CYAN='\033[0;36m' # Cyan
NC='\033[0m' # No Color
REP_SCRIPT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)" # Répertoire du script
ORIG_USER="${SUDO_USER:-$(logname 2>/dev/null || echo "${USER:-unknown}")}"
ERRORFILE="${REP_SCRIPT}/install_error.log"
export ROUGE CYAN NC ORIG_USER ERRORFILE REP_SCRIPT
# Fonctions d'affichage
warn() {
    echo -e "${ROUGE}$1${NC}"
}
info() {
    echo -e "${CYAN}$1${NC}"
}
# Vérifie et installe les dépendances manquantes
ensure_dependencies() {
    local missing=()
    for cmd in curl jq openssl find sudo dialog; do
        if ! command -v "$cmd" >/dev/null 2>&1; then
            missing+=("$cmd")
        fi
    done
    if [ ${#missing[@]} -eq 0 ]; then
        return 0
    fi
    echo "Dépendances manquantes : ${missing[*]}. Tentative d'installation..." >> "${ERRORFILE}"
    local pkgmgr install_cmd
    local pkgs="${missing[*]}"
    if command -v apt-get >/dev/null 2>&1; then
        pkgmgr="apt-get"
        install_cmd="apt-get update -qq && apt-get install -y -qq ${pkgs}"
    elif command -v dnf >/dev/null 2>&1; then
        pkgmgr="dnf"
        install_cmd="dnf install -y -q ${pkgs}"
    elif command -v yum >/dev/null 2>&1; then
        pkgmgr="yum"
        install_cmd="yum install -y -q ${pkgs}"
    elif command -v apk >/dev/null 2>&1; then
        pkgmgr="apk"
        install_cmd="apk add --no-cache ${pkgs}"
    elif command -v pacman >/dev/null 2>&1; then
        pkgmgr="pacman"
        install_cmd="pacman -Syu --noconfirm ${pkgs}"
    elif command -v zypper >/dev/null 2>&1; then
        pkgmgr="zypper"
        install_cmd="zypper install -y ${pkgs}"
    else
        warn "Aucun gestionnaire de paquets pris en charge trouvé pour installer : ${pkgs}"
        return 1
    fi
    info "Installation via ${pkgmgr} : ${pkgs}"

    if ! bash -c "$install_cmd"; then
        warn "Échec de l'installation des dépendances : ${pkgs}"
        return 1
    fi
    local still_missing=()
    for cmd in curl jq openssl find sudo dialog; do
        if ! command -v "$cmd" >/dev/null 2>&1; then
            still_missing+=("$cmd")
        fi
    done
    if [ ${#still_missing[@]} -gt 0 ]; then
        warn "Commandes toujours manquantes après l'installation : ${still_missing[*]}"
        return 1
    fi
    export NEED_RESTART=1
    return 0
}
# Détection de la distribution
if source /etc/os-release 2>/dev/null; then
    DISTRO_ID=$(echo "$ID" | tr '[:upper:]' '[:lower:]')
    info "Distribution détectée : ${DISTRO_ID^} $(echo "${VERSION_ID}" | xargs)"
else
    warn "Distribution non détectée ou non prise en charge."
    exit 1
fi
# Détermination du groupe administrateur
case "$DISTRO_ID" in
    debian|ubuntu)
        ADMIN_GROUP="sudo"
        ;;
    centos|rhel|rocky|almalinux|fedora)
        ADMIN_GROUP="wheel"
        ;;
    *)
        ADMIN_GROUP="sudo"
        info "Distribution non reconnue. Utilisation de '${ADMIN_GROUP}' par défaut."
        ;;
esac
# Vérification des droits root
if [ "$EUID" -ne 0 ]; then
    if id -nG "$ORIG_USER" 2>/dev/null | grep -Eqw "sudo|wheel"; then
        exec sudo -- "$0" "$@"
    else
        warn "L'utilisateur ${ORIG_USER} n'a pas les droits administrateur (${ADMIN_GROUP})."
        warn "Veuillez rajouter ${ORIG_USER} au groupe ${ADMIN_GROUP} ou exécuter ce script en tant que root."
        exit 1
    fi
fi
# Vérification et installation des dépendances
if ensure_dependencies; then
    info "Toutes les dépendances sont satisfaites."
else
    warn "Échec de la vérification ou installation des dépendances."
    exit 1
fi
if [ "${NEED_RESTART:-0}" -eq 1 ]; then
    info "Dépendances installées. Redémarrage du script..."
    exec "$0" "$@"
fi
# Gestion du dépôt glpi_install
if [ -d "${REP_SCRIPT}/glpi_install/.git" ]; then
    cd "${REP_SCRIPT}/glpi_install" && git pull origin dev && cd ..
else
    git clone https://github.com/PapyPoc/glpi_install.git -b dev "${REP_SCRIPT}/glpi_install"
fi
chmod +x "${REP_SCRIPT}/glpi_install/glpi-install"
exit 0
source "${REP_SCRIPT}/glpi_install/glpi-install"
